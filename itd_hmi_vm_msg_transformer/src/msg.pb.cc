// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#include "msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace hirain {
namespace itd {
namespace hmi {
namespace demo {
namespace api {
class FromAduMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FromAduMessage>
      _instance;
} _FromAduMessage_default_instance_;
class ToAduMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ToAduMessage>
      _instance;
} _ToAduMessage_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message>
      _instance;
  const ::hirain::itd::hmi::demo::api::FromAduMessage* from_;
  const ::hirain::itd::hmi::demo::api::ToAduMessage* to_;
} _Message_default_instance_;
}  // namespace api
}  // namespace demo
}  // namespace hmi
}  // namespace itd
}  // namespace hirain
namespace protobuf_msg_2eproto {
void InitDefaultsFromAduMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::hirain::itd::hmi::demo::api::_FromAduMessage_default_instance_;
    new (ptr) ::hirain::itd::hmi::demo::api::FromAduMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hirain::itd::hmi::demo::api::FromAduMessage::InitAsDefaultInstance();
}

void InitDefaultsFromAduMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFromAduMessageImpl);
}

void InitDefaultsToAduMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::hirain::itd::hmi::demo::api::_ToAduMessage_default_instance_;
    new (ptr) ::hirain::itd::hmi::demo::api::ToAduMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hirain::itd::hmi::demo::api::ToAduMessage::InitAsDefaultInstance();
}

void InitDefaultsToAduMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsToAduMessageImpl);
}

void InitDefaultsMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_msg_2eproto::InitDefaultsFromAduMessage();
  protobuf_msg_2eproto::InitDefaultsToAduMessage();
  {
    void* ptr = &::hirain::itd::hmi::demo::api::_Message_default_instance_;
    new (ptr) ::hirain::itd::hmi::demo::api::Message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hirain::itd::hmi::demo::api::Message::InitAsDefaultInstance();
}

void InitDefaultsMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, carname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, pathnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, xfusion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, yfusion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, yawfusion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, vehiclespeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, advstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, advswitchreturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, softreturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, emergencyreturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, locflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, gpsflagpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, actuatorerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, sensorerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, evaim_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, navinum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::FromAduMessage, cipo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::ToAduMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::ToAduMessage, pathnumori_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::ToAduMessage, advswitch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::Message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::Message, type_),
  offsetof(::hirain::itd::hmi::demo::api::MessageDefaultTypeInternal, from_),
  offsetof(::hirain::itd::hmi::demo::api::MessageDefaultTypeInternal, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hirain::itd::hmi::demo::api::Message, aduMessage_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::hirain::itd::hmi::demo::api::FromAduMessage)},
  { 22, -1, sizeof(::hirain::itd::hmi::demo::api::ToAduMessage)},
  { 29, -1, sizeof(::hirain::itd::hmi::demo::api::Message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hirain::itd::hmi::demo::api::_FromAduMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hirain::itd::hmi::demo::api::_ToAduMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hirain::itd::hmi::demo::api::_Message_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "msg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tmsg.proto\022\027hirain.itd.hmi.demo.api\"\325\002\n"
      "\016FromAduMessage\022\017\n\007CarName\030\001 \001(\t\022\017\n\007Path"
      "Num\030\002 \001(\005\022\017\n\007XFusion\030\003 \001(\001\022\017\n\007YFusion\030\004 "
      "\001(\001\022\021\n\tYawFusion\030\005 \001(\001\022\024\n\014VehicleSpeed\030\006"
      " \001(\002\022\021\n\tADVStatus\030\007 \001(\005\022\027\n\017ADVSwitchRetu"
      "rn\030\010 \001(\005\022\022\n\nSoftReturn\030\t \001(\005\022\027\n\017Emergenc"
      "yReturn\030\n \001(\005\022\017\n\007LocFlag\030\013 \001(\005\022\022\n\nGPSFla"
      "gPos\030\014 \001(\005\022\025\n\rActuatorError\030\r \001(\005\022\023\n\013Sen"
      "sorError\030\016 \001(\005\022\r\n\005EvAim\030\017 \001(\002\022\017\n\007NaviNum"
      "\030\020 \001(\005\022\014\n\004CIPO\030\021 \001(\002\"\244\001\n\014ToAduMessage\022\022\n"
      "\nPathNumOri\030\001 \001(\005\022C\n\tADVSwitch\030\002 \001(\01620.h"
      "irain.itd.hmi.demo.api.ToAduMessage.Acti"
      "onType\";\n\nActionType\022\014\n\010AdvStart\020\000\022\014\n\010So"
      "ftStop\020\001\022\021\n\rEmergencyStop\020\002\"\366\001\n\007Message\022"
      ":\n\004type\030\001 \001(\0162,.hirain.itd.hmi.demo.api."
      "Message.MessageType\0227\n\004from\030\002 \001(\0132\'.hira"
      "in.itd.hmi.demo.api.FromAduMessageH\000\0223\n\002"
      "to\030\003 \001(\0132%.hirain.itd.hmi.demo.api.ToAdu"
      "MessageH\000\"3\n\013MessageType\022\022\n\016FromAduMessa"
      "ge\020\000\022\020\n\014ToAduMessage\020\001B\014\n\naduMessageB\003\370\001"
      "\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 809);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_msg_2eproto
namespace hirain {
namespace itd {
namespace hmi {
namespace demo {
namespace api {
const ::google::protobuf::EnumDescriptor* ToAduMessage_ActionType_descriptor() {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msg_2eproto::file_level_enum_descriptors[0];
}
bool ToAduMessage_ActionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ToAduMessage_ActionType ToAduMessage::AdvStart;
const ToAduMessage_ActionType ToAduMessage::SoftStop;
const ToAduMessage_ActionType ToAduMessage::EmergencyStop;
const ToAduMessage_ActionType ToAduMessage::ActionType_MIN;
const ToAduMessage_ActionType ToAduMessage::ActionType_MAX;
const int ToAduMessage::ActionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Message_MessageType_descriptor() {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msg_2eproto::file_level_enum_descriptors[1];
}
bool Message_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Message_MessageType Message::FromAduMessage;
const Message_MessageType Message::ToAduMessage;
const Message_MessageType Message::MessageType_MIN;
const Message_MessageType Message::MessageType_MAX;
const int Message::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void FromAduMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FromAduMessage::kCarNameFieldNumber;
const int FromAduMessage::kPathNumFieldNumber;
const int FromAduMessage::kXFusionFieldNumber;
const int FromAduMessage::kYFusionFieldNumber;
const int FromAduMessage::kYawFusionFieldNumber;
const int FromAduMessage::kVehicleSpeedFieldNumber;
const int FromAduMessage::kADVStatusFieldNumber;
const int FromAduMessage::kADVSwitchReturnFieldNumber;
const int FromAduMessage::kSoftReturnFieldNumber;
const int FromAduMessage::kEmergencyReturnFieldNumber;
const int FromAduMessage::kLocFlagFieldNumber;
const int FromAduMessage::kGPSFlagPosFieldNumber;
const int FromAduMessage::kActuatorErrorFieldNumber;
const int FromAduMessage::kSensorErrorFieldNumber;
const int FromAduMessage::kEvAimFieldNumber;
const int FromAduMessage::kNaviNumFieldNumber;
const int FromAduMessage::kCIPOFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FromAduMessage::FromAduMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_msg_2eproto::InitDefaultsFromAduMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hirain.itd.hmi.demo.api.FromAduMessage)
}
FromAduMessage::FromAduMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_msg_2eproto::InitDefaultsFromAduMessage();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hirain.itd.hmi.demo.api.FromAduMessage)
}
FromAduMessage::FromAduMessage(const FromAduMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  carname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.carname().size() > 0) {
    carname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.carname(),
      GetArenaNoVirtual());
  }
  ::memcpy(&xfusion_, &from.xfusion_,
    static_cast<size_t>(reinterpret_cast<char*>(&cipo_) -
    reinterpret_cast<char*>(&xfusion_)) + sizeof(cipo_));
  // @@protoc_insertion_point(copy_constructor:hirain.itd.hmi.demo.api.FromAduMessage)
}

void FromAduMessage::SharedCtor() {
  carname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&xfusion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cipo_) -
      reinterpret_cast<char*>(&xfusion_)) + sizeof(cipo_));
  _cached_size_ = 0;
}

FromAduMessage::~FromAduMessage() {
  // @@protoc_insertion_point(destructor:hirain.itd.hmi.demo.api.FromAduMessage)
  SharedDtor();
}

void FromAduMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  carname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FromAduMessage::ArenaDtor(void* object) {
  FromAduMessage* _this = reinterpret_cast< FromAduMessage* >(object);
  (void)_this;
}
void FromAduMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FromAduMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FromAduMessage::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FromAduMessage& FromAduMessage::default_instance() {
  ::protobuf_msg_2eproto::InitDefaultsFromAduMessage();
  return *internal_default_instance();
}

FromAduMessage* FromAduMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<FromAduMessage>(arena);
}

void FromAduMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hirain.itd.hmi.demo.api.FromAduMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  carname_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&xfusion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cipo_) -
      reinterpret_cast<char*>(&xfusion_)) + sizeof(cipo_));
  _internal_metadata_.Clear();
}

bool FromAduMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hirain.itd.hmi.demo.api.FromAduMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string CarName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_carname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->carname().data(), static_cast<int>(this->carname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hirain.itd.hmi.demo.api.FromAduMessage.CarName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PathNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pathnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double XFusion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xfusion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double YFusion = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yfusion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double YawFusion = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yawfusion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float VehicleSpeed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vehiclespeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ADVStatus = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ADVSwitchReturn = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &advswitchreturn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SoftReturn = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &softreturn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 EmergencyReturn = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &emergencyreturn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LocFlag = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &locflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 GPSFlagPos = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpsflagpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ActuatorError = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actuatorerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SensorError = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sensorerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float EvAim = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &evaim_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 NaviNum = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &navinum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CIPO = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(141u /* 141 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cipo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hirain.itd.hmi.demo.api.FromAduMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hirain.itd.hmi.demo.api.FromAduMessage)
  return false;
#undef DO_
}

void FromAduMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hirain.itd.hmi.demo.api.FromAduMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string CarName = 1;
  if (this->carname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->carname().data(), static_cast<int>(this->carname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hirain.itd.hmi.demo.api.FromAduMessage.CarName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->carname(), output);
  }

  // int32 PathNum = 2;
  if (this->pathnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pathnum(), output);
  }

  // double XFusion = 3;
  if (this->xfusion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->xfusion(), output);
  }

  // double YFusion = 4;
  if (this->yfusion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->yfusion(), output);
  }

  // double YawFusion = 5;
  if (this->yawfusion() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->yawfusion(), output);
  }

  // float VehicleSpeed = 6;
  if (this->vehiclespeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->vehiclespeed(), output);
  }

  // int32 ADVStatus = 7;
  if (this->advstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->advstatus(), output);
  }

  // int32 ADVSwitchReturn = 8;
  if (this->advswitchreturn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->advswitchreturn(), output);
  }

  // int32 SoftReturn = 9;
  if (this->softreturn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->softreturn(), output);
  }

  // int32 EmergencyReturn = 10;
  if (this->emergencyreturn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->emergencyreturn(), output);
  }

  // int32 LocFlag = 11;
  if (this->locflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->locflag(), output);
  }

  // int32 GPSFlagPos = 12;
  if (this->gpsflagpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->gpsflagpos(), output);
  }

  // int32 ActuatorError = 13;
  if (this->actuatorerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->actuatorerror(), output);
  }

  // int32 SensorError = 14;
  if (this->sensorerror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->sensorerror(), output);
  }

  // float EvAim = 15;
  if (this->evaim() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->evaim(), output);
  }

  // int32 NaviNum = 16;
  if (this->navinum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->navinum(), output);
  }

  // float CIPO = 17;
  if (this->cipo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->cipo(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:hirain.itd.hmi.demo.api.FromAduMessage)
}

::google::protobuf::uint8* FromAduMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hirain.itd.hmi.demo.api.FromAduMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string CarName = 1;
  if (this->carname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->carname().data(), static_cast<int>(this->carname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hirain.itd.hmi.demo.api.FromAduMessage.CarName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->carname(), target);
  }

  // int32 PathNum = 2;
  if (this->pathnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pathnum(), target);
  }

  // double XFusion = 3;
  if (this->xfusion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->xfusion(), target);
  }

  // double YFusion = 4;
  if (this->yfusion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->yfusion(), target);
  }

  // double YawFusion = 5;
  if (this->yawfusion() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->yawfusion(), target);
  }

  // float VehicleSpeed = 6;
  if (this->vehiclespeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->vehiclespeed(), target);
  }

  // int32 ADVStatus = 7;
  if (this->advstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->advstatus(), target);
  }

  // int32 ADVSwitchReturn = 8;
  if (this->advswitchreturn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->advswitchreturn(), target);
  }

  // int32 SoftReturn = 9;
  if (this->softreturn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->softreturn(), target);
  }

  // int32 EmergencyReturn = 10;
  if (this->emergencyreturn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->emergencyreturn(), target);
  }

  // int32 LocFlag = 11;
  if (this->locflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->locflag(), target);
  }

  // int32 GPSFlagPos = 12;
  if (this->gpsflagpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->gpsflagpos(), target);
  }

  // int32 ActuatorError = 13;
  if (this->actuatorerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->actuatorerror(), target);
  }

  // int32 SensorError = 14;
  if (this->sensorerror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->sensorerror(), target);
  }

  // float EvAim = 15;
  if (this->evaim() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->evaim(), target);
  }

  // int32 NaviNum = 16;
  if (this->navinum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->navinum(), target);
  }

  // float CIPO = 17;
  if (this->cipo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->cipo(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hirain.itd.hmi.demo.api.FromAduMessage)
  return target;
}

size_t FromAduMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hirain.itd.hmi.demo.api.FromAduMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string CarName = 1;
  if (this->carname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->carname());
  }

  // double XFusion = 3;
  if (this->xfusion() != 0) {
    total_size += 1 + 8;
  }

  // double YFusion = 4;
  if (this->yfusion() != 0) {
    total_size += 1 + 8;
  }

  // int32 PathNum = 2;
  if (this->pathnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pathnum());
  }

  // float VehicleSpeed = 6;
  if (this->vehiclespeed() != 0) {
    total_size += 1 + 4;
  }

  // double YawFusion = 5;
  if (this->yawfusion() != 0) {
    total_size += 1 + 8;
  }

  // int32 ADVStatus = 7;
  if (this->advstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->advstatus());
  }

  // int32 ADVSwitchReturn = 8;
  if (this->advswitchreturn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->advswitchreturn());
  }

  // int32 SoftReturn = 9;
  if (this->softreturn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->softreturn());
  }

  // int32 EmergencyReturn = 10;
  if (this->emergencyreturn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->emergencyreturn());
  }

  // int32 LocFlag = 11;
  if (this->locflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->locflag());
  }

  // int32 GPSFlagPos = 12;
  if (this->gpsflagpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gpsflagpos());
  }

  // int32 ActuatorError = 13;
  if (this->actuatorerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actuatorerror());
  }

  // int32 SensorError = 14;
  if (this->sensorerror() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sensorerror());
  }

  // float EvAim = 15;
  if (this->evaim() != 0) {
    total_size += 1 + 4;
  }

  // int32 NaviNum = 16;
  if (this->navinum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->navinum());
  }

  // float CIPO = 17;
  if (this->cipo() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FromAduMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hirain.itd.hmi.demo.api.FromAduMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const FromAduMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FromAduMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hirain.itd.hmi.demo.api.FromAduMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hirain.itd.hmi.demo.api.FromAduMessage)
    MergeFrom(*source);
  }
}

void FromAduMessage::MergeFrom(const FromAduMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hirain.itd.hmi.demo.api.FromAduMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.carname().size() > 0) {
    set_carname(from.carname());
  }
  if (from.xfusion() != 0) {
    set_xfusion(from.xfusion());
  }
  if (from.yfusion() != 0) {
    set_yfusion(from.yfusion());
  }
  if (from.pathnum() != 0) {
    set_pathnum(from.pathnum());
  }
  if (from.vehiclespeed() != 0) {
    set_vehiclespeed(from.vehiclespeed());
  }
  if (from.yawfusion() != 0) {
    set_yawfusion(from.yawfusion());
  }
  if (from.advstatus() != 0) {
    set_advstatus(from.advstatus());
  }
  if (from.advswitchreturn() != 0) {
    set_advswitchreturn(from.advswitchreturn());
  }
  if (from.softreturn() != 0) {
    set_softreturn(from.softreturn());
  }
  if (from.emergencyreturn() != 0) {
    set_emergencyreturn(from.emergencyreturn());
  }
  if (from.locflag() != 0) {
    set_locflag(from.locflag());
  }
  if (from.gpsflagpos() != 0) {
    set_gpsflagpos(from.gpsflagpos());
  }
  if (from.actuatorerror() != 0) {
    set_actuatorerror(from.actuatorerror());
  }
  if (from.sensorerror() != 0) {
    set_sensorerror(from.sensorerror());
  }
  if (from.evaim() != 0) {
    set_evaim(from.evaim());
  }
  if (from.navinum() != 0) {
    set_navinum(from.navinum());
  }
  if (from.cipo() != 0) {
    set_cipo(from.cipo());
  }
}

void FromAduMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hirain.itd.hmi.demo.api.FromAduMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FromAduMessage::CopyFrom(const FromAduMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hirain.itd.hmi.demo.api.FromAduMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FromAduMessage::IsInitialized() const {
  return true;
}

void FromAduMessage::Swap(FromAduMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FromAduMessage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FromAduMessage::UnsafeArenaSwap(FromAduMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FromAduMessage::InternalSwap(FromAduMessage* other) {
  using std::swap;
  carname_.Swap(&other->carname_);
  swap(xfusion_, other->xfusion_);
  swap(yfusion_, other->yfusion_);
  swap(pathnum_, other->pathnum_);
  swap(vehiclespeed_, other->vehiclespeed_);
  swap(yawfusion_, other->yawfusion_);
  swap(advstatus_, other->advstatus_);
  swap(advswitchreturn_, other->advswitchreturn_);
  swap(softreturn_, other->softreturn_);
  swap(emergencyreturn_, other->emergencyreturn_);
  swap(locflag_, other->locflag_);
  swap(gpsflagpos_, other->gpsflagpos_);
  swap(actuatorerror_, other->actuatorerror_);
  swap(sensorerror_, other->sensorerror_);
  swap(evaim_, other->evaim_);
  swap(navinum_, other->navinum_);
  swap(cipo_, other->cipo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FromAduMessage::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ToAduMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToAduMessage::kPathNumOriFieldNumber;
const int ToAduMessage::kADVSwitchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToAduMessage::ToAduMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_msg_2eproto::InitDefaultsToAduMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hirain.itd.hmi.demo.api.ToAduMessage)
}
ToAduMessage::ToAduMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_msg_2eproto::InitDefaultsToAduMessage();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hirain.itd.hmi.demo.api.ToAduMessage)
}
ToAduMessage::ToAduMessage(const ToAduMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pathnumori_, &from.pathnumori_,
    static_cast<size_t>(reinterpret_cast<char*>(&advswitch_) -
    reinterpret_cast<char*>(&pathnumori_)) + sizeof(advswitch_));
  // @@protoc_insertion_point(copy_constructor:hirain.itd.hmi.demo.api.ToAduMessage)
}

void ToAduMessage::SharedCtor() {
  ::memset(&pathnumori_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advswitch_) -
      reinterpret_cast<char*>(&pathnumori_)) + sizeof(advswitch_));
  _cached_size_ = 0;
}

ToAduMessage::~ToAduMessage() {
  // @@protoc_insertion_point(destructor:hirain.itd.hmi.demo.api.ToAduMessage)
  SharedDtor();
}

void ToAduMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ToAduMessage::ArenaDtor(void* object) {
  ToAduMessage* _this = reinterpret_cast< ToAduMessage* >(object);
  (void)_this;
}
void ToAduMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ToAduMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToAduMessage::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToAduMessage& ToAduMessage::default_instance() {
  ::protobuf_msg_2eproto::InitDefaultsToAduMessage();
  return *internal_default_instance();
}

ToAduMessage* ToAduMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ToAduMessage>(arena);
}

void ToAduMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:hirain.itd.hmi.demo.api.ToAduMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pathnumori_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advswitch_) -
      reinterpret_cast<char*>(&pathnumori_)) + sizeof(advswitch_));
  _internal_metadata_.Clear();
}

bool ToAduMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hirain.itd.hmi.demo.api.ToAduMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 PathNumOri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pathnumori_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .hirain.itd.hmi.demo.api.ToAduMessage.ActionType ADVSwitch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_advswitch(static_cast< ::hirain::itd::hmi::demo::api::ToAduMessage_ActionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hirain.itd.hmi.demo.api.ToAduMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hirain.itd.hmi.demo.api.ToAduMessage)
  return false;
#undef DO_
}

void ToAduMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hirain.itd.hmi.demo.api.ToAduMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PathNumOri = 1;
  if (this->pathnumori() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pathnumori(), output);
  }

  // .hirain.itd.hmi.demo.api.ToAduMessage.ActionType ADVSwitch = 2;
  if (this->advswitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->advswitch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:hirain.itd.hmi.demo.api.ToAduMessage)
}

::google::protobuf::uint8* ToAduMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hirain.itd.hmi.demo.api.ToAduMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PathNumOri = 1;
  if (this->pathnumori() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pathnumori(), target);
  }

  // .hirain.itd.hmi.demo.api.ToAduMessage.ActionType ADVSwitch = 2;
  if (this->advswitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->advswitch(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hirain.itd.hmi.demo.api.ToAduMessage)
  return target;
}

size_t ToAduMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hirain.itd.hmi.demo.api.ToAduMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 PathNumOri = 1;
  if (this->pathnumori() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pathnumori());
  }

  // .hirain.itd.hmi.demo.api.ToAduMessage.ActionType ADVSwitch = 2;
  if (this->advswitch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->advswitch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToAduMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hirain.itd.hmi.demo.api.ToAduMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ToAduMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToAduMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hirain.itd.hmi.demo.api.ToAduMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hirain.itd.hmi.demo.api.ToAduMessage)
    MergeFrom(*source);
  }
}

void ToAduMessage::MergeFrom(const ToAduMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hirain.itd.hmi.demo.api.ToAduMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pathnumori() != 0) {
    set_pathnumori(from.pathnumori());
  }
  if (from.advswitch() != 0) {
    set_advswitch(from.advswitch());
  }
}

void ToAduMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hirain.itd.hmi.demo.api.ToAduMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToAduMessage::CopyFrom(const ToAduMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hirain.itd.hmi.demo.api.ToAduMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToAduMessage::IsInitialized() const {
  return true;
}

void ToAduMessage::Swap(ToAduMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ToAduMessage* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ToAduMessage::UnsafeArenaSwap(ToAduMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ToAduMessage::InternalSwap(ToAduMessage* other) {
  using std::swap;
  swap(pathnumori_, other->pathnumori_);
  swap(advswitch_, other->advswitch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToAduMessage::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message::InitAsDefaultInstance() {
  ::hirain::itd::hmi::demo::api::_Message_default_instance_.from_ = const_cast< ::hirain::itd::hmi::demo::api::FromAduMessage*>(
      ::hirain::itd::hmi::demo::api::FromAduMessage::internal_default_instance());
  ::hirain::itd::hmi::demo::api::_Message_default_instance_.to_ = const_cast< ::hirain::itd::hmi::demo::api::ToAduMessage*>(
      ::hirain::itd::hmi::demo::api::ToAduMessage::internal_default_instance());
}
void Message::set_allocated_from(::hirain::itd::hmi::demo::api::FromAduMessage* from) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_aduMessage();
  if (from) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(from);
    if (message_arena != submessage_arena) {
      from = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, from, submessage_arena);
    }
    set_has_from();
    aduMessage_.from_ = from;
  }
  // @@protoc_insertion_point(field_set_allocated:hirain.itd.hmi.demo.api.Message.from)
}
void Message::set_allocated_to(::hirain::itd::hmi::demo::api::ToAduMessage* to) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_aduMessage();
  if (to) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(to);
    if (message_arena != submessage_arena) {
      to = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, to, submessage_arena);
    }
    set_has_to();
    aduMessage_.to_ = to;
  }
  // @@protoc_insertion_point(field_set_allocated:hirain.itd.hmi.demo.api.Message.to)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kTypeFieldNumber;
const int Message::kFromFieldNumber;
const int Message::kToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_msg_2eproto::InitDefaultsMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hirain.itd.hmi.demo.api.Message)
}
Message::Message(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_msg_2eproto::InitDefaultsMessage();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hirain.itd.hmi.demo.api.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  clear_has_aduMessage();
  switch (from.aduMessage_case()) {
    case kFrom: {
      mutable_from()->::hirain::itd::hmi::demo::api::FromAduMessage::MergeFrom(from.from());
      break;
    }
    case kTo: {
      mutable_to()->::hirain::itd::hmi::demo::api::ToAduMessage::MergeFrom(from.to());
      break;
    }
    case ADUMESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:hirain.itd.hmi.demo.api.Message)
}

void Message::SharedCtor() {
  type_ = 0;
  clear_has_aduMessage();
  _cached_size_ = 0;
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:hirain.itd.hmi.demo.api.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_aduMessage()) {
    clear_aduMessage();
  }
}

void Message::ArenaDtor(void* object) {
  Message* _this = reinterpret_cast< Message* >(object);
  (void)_this;
}
void Message::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message& Message::default_instance() {
  ::protobuf_msg_2eproto::InitDefaultsMessage();
  return *internal_default_instance();
}

Message* Message::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Message>(arena);
}

void Message::clear_aduMessage() {
// @@protoc_insertion_point(one_of_clear_start:hirain.itd.hmi.demo.api.Message)
  switch (aduMessage_case()) {
    case kFrom: {
      if (GetArenaNoVirtual() == NULL) {
        delete aduMessage_.from_;
      }
      break;
    }
    case kTo: {
      if (GetArenaNoVirtual() == NULL) {
        delete aduMessage_.to_;
      }
      break;
    }
    case ADUMESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ADUMESSAGE_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:hirain.itd.hmi.demo.api.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  clear_aduMessage();
  _internal_metadata_.Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hirain.itd.hmi.demo.api.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .hirain.itd.hmi.demo.api.Message.MessageType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::hirain::itd::hmi::demo::api::Message_MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .hirain.itd.hmi.demo.api.FromAduMessage from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .hirain.itd.hmi.demo.api.ToAduMessage to = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hirain.itd.hmi.demo.api.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hirain.itd.hmi.demo.api.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hirain.itd.hmi.demo.api.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .hirain.itd.hmi.demo.api.Message.MessageType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .hirain.itd.hmi.demo.api.FromAduMessage from = 2;
  if (has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *aduMessage_.from_, output);
  }

  // .hirain.itd.hmi.demo.api.ToAduMessage to = 3;
  if (has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *aduMessage_.to_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:hirain.itd.hmi.demo.api.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hirain.itd.hmi.demo.api.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .hirain.itd.hmi.demo.api.Message.MessageType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .hirain.itd.hmi.demo.api.FromAduMessage from = 2;
  if (has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *aduMessage_.from_, deterministic, target);
  }

  // .hirain.itd.hmi.demo.api.ToAduMessage to = 3;
  if (has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *aduMessage_.to_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hirain.itd.hmi.demo.api.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hirain.itd.hmi.demo.api.Message)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .hirain.itd.hmi.demo.api.Message.MessageType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  switch (aduMessage_case()) {
    // .hirain.itd.hmi.demo.api.FromAduMessage from = 2;
    case kFrom: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *aduMessage_.from_);
      break;
    }
    // .hirain.itd.hmi.demo.api.ToAduMessage to = 3;
    case kTo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *aduMessage_.to_);
      break;
    }
    case ADUMESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hirain.itd.hmi.demo.api.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hirain.itd.hmi.demo.api.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hirain.itd.hmi.demo.api.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hirain.itd.hmi.demo.api.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  switch (from.aduMessage_case()) {
    case kFrom: {
      mutable_from()->::hirain::itd::hmi::demo::api::FromAduMessage::MergeFrom(from.from());
      break;
    }
    case kTo: {
      mutable_to()->::hirain::itd::hmi::demo::api::ToAduMessage::MergeFrom(from.to());
      break;
    }
    case ADUMESSAGE_NOT_SET: {
      break;
    }
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hirain.itd.hmi.demo.api.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hirain.itd.hmi.demo.api.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Message* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Message::UnsafeArenaSwap(Message* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(aduMessage_, other->aduMessage_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace demo
}  // namespace hmi
}  // namespace itd
}  // namespace hirain

// @@protoc_insertion_point(global_scope)
