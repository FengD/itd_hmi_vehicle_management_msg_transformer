// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#ifndef PROTOBUF_msg_2eproto__INCLUDED
#define PROTOBUF_msg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_msg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsFromAduMessageImpl();
void InitDefaultsFromAduMessage();
void InitDefaultsToAduMessageImpl();
void InitDefaultsToAduMessage();
void InitDefaultsMessageImpl();
void InitDefaultsMessage();
inline void InitDefaults() {
  InitDefaultsFromAduMessage();
  InitDefaultsToAduMessage();
  InitDefaultsMessage();
}
}  // namespace protobuf_msg_2eproto
namespace hirain {
namespace itd {
namespace hmi {
namespace demo {
namespace api {
class FromAduMessage;
class FromAduMessageDefaultTypeInternal;
extern FromAduMessageDefaultTypeInternal _FromAduMessage_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class ToAduMessage;
class ToAduMessageDefaultTypeInternal;
extern ToAduMessageDefaultTypeInternal _ToAduMessage_default_instance_;
}  // namespace api
}  // namespace demo
}  // namespace hmi
}  // namespace itd
}  // namespace hirain
namespace hirain {
namespace itd {
namespace hmi {
namespace demo {
namespace api {

enum ToAduMessage_ActionType {
  ToAduMessage_ActionType_AdvStart = 0,
  ToAduMessage_ActionType_SoftStop = 1,
  ToAduMessage_ActionType_EmergencyStop = 2,
  ToAduMessage_ActionType_ToAduMessage_ActionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ToAduMessage_ActionType_ToAduMessage_ActionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ToAduMessage_ActionType_IsValid(int value);
const ToAduMessage_ActionType ToAduMessage_ActionType_ActionType_MIN = ToAduMessage_ActionType_AdvStart;
const ToAduMessage_ActionType ToAduMessage_ActionType_ActionType_MAX = ToAduMessage_ActionType_EmergencyStop;
const int ToAduMessage_ActionType_ActionType_ARRAYSIZE = ToAduMessage_ActionType_ActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ToAduMessage_ActionType_descriptor();
inline const ::std::string& ToAduMessage_ActionType_Name(ToAduMessage_ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ToAduMessage_ActionType_descriptor(), value);
}
inline bool ToAduMessage_ActionType_Parse(
    const ::std::string& name, ToAduMessage_ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ToAduMessage_ActionType>(
    ToAduMessage_ActionType_descriptor(), name, value);
}
enum Message_MessageType {
  Message_MessageType_FromAduMessage = 0,
  Message_MessageType_ToAduMessage = 1,
  Message_MessageType_Message_MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Message_MessageType_Message_MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Message_MessageType_IsValid(int value);
const Message_MessageType Message_MessageType_MessageType_MIN = Message_MessageType_FromAduMessage;
const Message_MessageType Message_MessageType_MessageType_MAX = Message_MessageType_ToAduMessage;
const int Message_MessageType_MessageType_ARRAYSIZE = Message_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_MessageType_descriptor();
inline const ::std::string& Message_MessageType_Name(Message_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_MessageType_descriptor(), value);
}
inline bool Message_MessageType_Parse(
    const ::std::string& name, Message_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_MessageType>(
    Message_MessageType_descriptor(), name, value);
}
// ===================================================================

class FromAduMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hirain.itd.hmi.demo.api.FromAduMessage) */ {
 public:
  FromAduMessage();
  virtual ~FromAduMessage();

  FromAduMessage(const FromAduMessage& from);

  inline FromAduMessage& operator=(const FromAduMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FromAduMessage(FromAduMessage&& from) noexcept
    : FromAduMessage() {
    *this = ::std::move(from);
  }

  inline FromAduMessage& operator=(FromAduMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const FromAduMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FromAduMessage* internal_default_instance() {
    return reinterpret_cast<const FromAduMessage*>(
               &_FromAduMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(FromAduMessage* other);
  void Swap(FromAduMessage* other);
  friend void swap(FromAduMessage& a, FromAduMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FromAduMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  FromAduMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FromAduMessage& from);
  void MergeFrom(const FromAduMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FromAduMessage* other);
  protected:
  explicit FromAduMessage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string CarName = 1;
  void clear_carname();
  static const int kCarNameFieldNumber = 1;
  const ::std::string& carname() const;
  void set_carname(const ::std::string& value);
  #if LANG_CXX11
  void set_carname(::std::string&& value);
  #endif
  void set_carname(const char* value);
  void set_carname(const char* value, size_t size);
  ::std::string* mutable_carname();
  ::std::string* release_carname();
  void set_allocated_carname(::std::string* carname);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_carname();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_carname(
      ::std::string* carname);

  // double XFusion = 3;
  void clear_xfusion();
  static const int kXFusionFieldNumber = 3;
  double xfusion() const;
  void set_xfusion(double value);

  // double YFusion = 4;
  void clear_yfusion();
  static const int kYFusionFieldNumber = 4;
  double yfusion() const;
  void set_yfusion(double value);

  // int32 PathNum = 2;
  void clear_pathnum();
  static const int kPathNumFieldNumber = 2;
  ::google::protobuf::int32 pathnum() const;
  void set_pathnum(::google::protobuf::int32 value);

  // float VehicleSpeed = 6;
  void clear_vehiclespeed();
  static const int kVehicleSpeedFieldNumber = 6;
  float vehiclespeed() const;
  void set_vehiclespeed(float value);

  // double YawFusion = 5;
  void clear_yawfusion();
  static const int kYawFusionFieldNumber = 5;
  double yawfusion() const;
  void set_yawfusion(double value);

  // int32 ADVStatus = 7;
  void clear_advstatus();
  static const int kADVStatusFieldNumber = 7;
  ::google::protobuf::int32 advstatus() const;
  void set_advstatus(::google::protobuf::int32 value);

  // int32 ADVSwitchReturn = 8;
  void clear_advswitchreturn();
  static const int kADVSwitchReturnFieldNumber = 8;
  ::google::protobuf::int32 advswitchreturn() const;
  void set_advswitchreturn(::google::protobuf::int32 value);

  // int32 SoftReturn = 9;
  void clear_softreturn();
  static const int kSoftReturnFieldNumber = 9;
  ::google::protobuf::int32 softreturn() const;
  void set_softreturn(::google::protobuf::int32 value);

  // int32 EmergencyReturn = 10;
  void clear_emergencyreturn();
  static const int kEmergencyReturnFieldNumber = 10;
  ::google::protobuf::int32 emergencyreturn() const;
  void set_emergencyreturn(::google::protobuf::int32 value);

  // int32 LocFlag = 11;
  void clear_locflag();
  static const int kLocFlagFieldNumber = 11;
  ::google::protobuf::int32 locflag() const;
  void set_locflag(::google::protobuf::int32 value);

  // int32 GPSFlagPos = 12;
  void clear_gpsflagpos();
  static const int kGPSFlagPosFieldNumber = 12;
  ::google::protobuf::int32 gpsflagpos() const;
  void set_gpsflagpos(::google::protobuf::int32 value);

  // int32 ActuatorError = 13;
  void clear_actuatorerror();
  static const int kActuatorErrorFieldNumber = 13;
  ::google::protobuf::int32 actuatorerror() const;
  void set_actuatorerror(::google::protobuf::int32 value);

  // int32 SensorError = 14;
  void clear_sensorerror();
  static const int kSensorErrorFieldNumber = 14;
  ::google::protobuf::int32 sensorerror() const;
  void set_sensorerror(::google::protobuf::int32 value);

  // float EvAim = 15;
  void clear_evaim();
  static const int kEvAimFieldNumber = 15;
  float evaim() const;
  void set_evaim(float value);

  // int32 NaviNum = 16;
  void clear_navinum();
  static const int kNaviNumFieldNumber = 16;
  ::google::protobuf::int32 navinum() const;
  void set_navinum(::google::protobuf::int32 value);

  // float CIPO = 17;
  void clear_cipo();
  static const int kCIPOFieldNumber = 17;
  float cipo() const;
  void set_cipo(float value);

  // @@protoc_insertion_point(class_scope:hirain.itd.hmi.demo.api.FromAduMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr carname_;
  double xfusion_;
  double yfusion_;
  ::google::protobuf::int32 pathnum_;
  float vehiclespeed_;
  double yawfusion_;
  ::google::protobuf::int32 advstatus_;
  ::google::protobuf::int32 advswitchreturn_;
  ::google::protobuf::int32 softreturn_;
  ::google::protobuf::int32 emergencyreturn_;
  ::google::protobuf::int32 locflag_;
  ::google::protobuf::int32 gpsflagpos_;
  ::google::protobuf::int32 actuatorerror_;
  ::google::protobuf::int32 sensorerror_;
  float evaim_;
  ::google::protobuf::int32 navinum_;
  float cipo_;
  mutable int _cached_size_;
  friend struct ::protobuf_msg_2eproto::TableStruct;
  friend void ::protobuf_msg_2eproto::InitDefaultsFromAduMessageImpl();
};
// -------------------------------------------------------------------

class ToAduMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hirain.itd.hmi.demo.api.ToAduMessage) */ {
 public:
  ToAduMessage();
  virtual ~ToAduMessage();

  ToAduMessage(const ToAduMessage& from);

  inline ToAduMessage& operator=(const ToAduMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToAduMessage(ToAduMessage&& from) noexcept
    : ToAduMessage() {
    *this = ::std::move(from);
  }

  inline ToAduMessage& operator=(ToAduMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ToAduMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToAduMessage* internal_default_instance() {
    return reinterpret_cast<const ToAduMessage*>(
               &_ToAduMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ToAduMessage* other);
  void Swap(ToAduMessage* other);
  friend void swap(ToAduMessage& a, ToAduMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToAduMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ToAduMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ToAduMessage& from);
  void MergeFrom(const ToAduMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ToAduMessage* other);
  protected:
  explicit ToAduMessage(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ToAduMessage_ActionType ActionType;
  static const ActionType AdvStart =
    ToAduMessage_ActionType_AdvStart;
  static const ActionType SoftStop =
    ToAduMessage_ActionType_SoftStop;
  static const ActionType EmergencyStop =
    ToAduMessage_ActionType_EmergencyStop;
  static inline bool ActionType_IsValid(int value) {
    return ToAduMessage_ActionType_IsValid(value);
  }
  static const ActionType ActionType_MIN =
    ToAduMessage_ActionType_ActionType_MIN;
  static const ActionType ActionType_MAX =
    ToAduMessage_ActionType_ActionType_MAX;
  static const int ActionType_ARRAYSIZE =
    ToAduMessage_ActionType_ActionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActionType_descriptor() {
    return ToAduMessage_ActionType_descriptor();
  }
  static inline const ::std::string& ActionType_Name(ActionType value) {
    return ToAduMessage_ActionType_Name(value);
  }
  static inline bool ActionType_Parse(const ::std::string& name,
      ActionType* value) {
    return ToAduMessage_ActionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 PathNumOri = 1;
  void clear_pathnumori();
  static const int kPathNumOriFieldNumber = 1;
  ::google::protobuf::int32 pathnumori() const;
  void set_pathnumori(::google::protobuf::int32 value);

  // .hirain.itd.hmi.demo.api.ToAduMessage.ActionType ADVSwitch = 2;
  void clear_advswitch();
  static const int kADVSwitchFieldNumber = 2;
  ::hirain::itd::hmi::demo::api::ToAduMessage_ActionType advswitch() const;
  void set_advswitch(::hirain::itd::hmi::demo::api::ToAduMessage_ActionType value);

  // @@protoc_insertion_point(class_scope:hirain.itd.hmi.demo.api.ToAduMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int32 pathnumori_;
  int advswitch_;
  mutable int _cached_size_;
  friend struct ::protobuf_msg_2eproto::TableStruct;
  friend void ::protobuf_msg_2eproto::InitDefaultsToAduMessageImpl();
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hirain.itd.hmi.demo.api.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  enum AduMessageCase {
    kFrom = 2,
    kTo = 3,
    ADUMESSAGE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(Message* other);
  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  protected:
  explicit Message(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Message_MessageType MessageType;
  static const MessageType FromAduMessage =
    Message_MessageType_FromAduMessage;
  static const MessageType ToAduMessage =
    Message_MessageType_ToAduMessage;
  static inline bool MessageType_IsValid(int value) {
    return Message_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    Message_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    Message_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    Message_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return Message_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return Message_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return Message_MessageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .hirain.itd.hmi.demo.api.Message.MessageType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::hirain::itd::hmi::demo::api::Message_MessageType type() const;
  void set_type(::hirain::itd::hmi::demo::api::Message_MessageType value);

  // .hirain.itd.hmi.demo.api.FromAduMessage from = 2;
  bool has_from() const;
  void clear_from();
  static const int kFromFieldNumber = 2;
  private:
  void _slow_mutable_from();
  public:
  const ::hirain::itd::hmi::demo::api::FromAduMessage& from() const;
  ::hirain::itd::hmi::demo::api::FromAduMessage* release_from();
  ::hirain::itd::hmi::demo::api::FromAduMessage* mutable_from();
  void set_allocated_from(::hirain::itd::hmi::demo::api::FromAduMessage* from);
  void unsafe_arena_set_allocated_from(
      ::hirain::itd::hmi::demo::api::FromAduMessage* from);
  ::hirain::itd::hmi::demo::api::FromAduMessage* unsafe_arena_release_from();

  // .hirain.itd.hmi.demo.api.ToAduMessage to = 3;
  bool has_to() const;
  void clear_to();
  static const int kToFieldNumber = 3;
  private:
  void _slow_mutable_to();
  public:
  const ::hirain::itd::hmi::demo::api::ToAduMessage& to() const;
  ::hirain::itd::hmi::demo::api::ToAduMessage* release_to();
  ::hirain::itd::hmi::demo::api::ToAduMessage* mutable_to();
  void set_allocated_to(::hirain::itd::hmi::demo::api::ToAduMessage* to);
  void unsafe_arena_set_allocated_to(
      ::hirain::itd::hmi::demo::api::ToAduMessage* to);
  ::hirain::itd::hmi::demo::api::ToAduMessage* unsafe_arena_release_to();

  AduMessageCase aduMessage_case() const;
  // @@protoc_insertion_point(class_scope:hirain.itd.hmi.demo.api.Message)
 private:
  void set_has_from();
  void set_has_to();

  inline bool has_aduMessage() const;
  void clear_aduMessage();
  inline void clear_has_aduMessage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int type_;
  union AduMessageUnion {
    AduMessageUnion() {}
    ::hirain::itd::hmi::demo::api::FromAduMessage* from_;
    ::hirain::itd::hmi::demo::api::ToAduMessage* to_;
  } aduMessage_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_msg_2eproto::TableStruct;
  friend void ::protobuf_msg_2eproto::InitDefaultsMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FromAduMessage

// string CarName = 1;
inline void FromAduMessage::clear_carname() {
  carname_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& FromAduMessage::carname() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.CarName)
  return carname_.Get();
}
inline void FromAduMessage::set_carname(const ::std::string& value) {
  
  carname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.CarName)
}
#if LANG_CXX11
inline void FromAduMessage::set_carname(::std::string&& value) {
  
  carname_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:hirain.itd.hmi.demo.api.FromAduMessage.CarName)
}
#endif
inline void FromAduMessage::set_carname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  carname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:hirain.itd.hmi.demo.api.FromAduMessage.CarName)
}
inline void FromAduMessage::set_carname(const char* value,
    size_t size) {
  
  carname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:hirain.itd.hmi.demo.api.FromAduMessage.CarName)
}
inline ::std::string* FromAduMessage::mutable_carname() {
  
  // @@protoc_insertion_point(field_mutable:hirain.itd.hmi.demo.api.FromAduMessage.CarName)
  return carname_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* FromAduMessage::release_carname() {
  // @@protoc_insertion_point(field_release:hirain.itd.hmi.demo.api.FromAduMessage.CarName)
  
  return carname_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void FromAduMessage::set_allocated_carname(::std::string* carname) {
  if (carname != NULL) {
    
  } else {
    
  }
  carname_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), carname,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:hirain.itd.hmi.demo.api.FromAduMessage.CarName)
}
inline ::std::string* FromAduMessage::unsafe_arena_release_carname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hirain.itd.hmi.demo.api.FromAduMessage.CarName)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return carname_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void FromAduMessage::unsafe_arena_set_allocated_carname(
    ::std::string* carname) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (carname != NULL) {
    
  } else {
    
  }
  carname_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      carname, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hirain.itd.hmi.demo.api.FromAduMessage.CarName)
}

// int32 PathNum = 2;
inline void FromAduMessage::clear_pathnum() {
  pathnum_ = 0;
}
inline ::google::protobuf::int32 FromAduMessage::pathnum() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.PathNum)
  return pathnum_;
}
inline void FromAduMessage::set_pathnum(::google::protobuf::int32 value) {
  
  pathnum_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.PathNum)
}

// double XFusion = 3;
inline void FromAduMessage::clear_xfusion() {
  xfusion_ = 0;
}
inline double FromAduMessage::xfusion() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.XFusion)
  return xfusion_;
}
inline void FromAduMessage::set_xfusion(double value) {
  
  xfusion_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.XFusion)
}

// double YFusion = 4;
inline void FromAduMessage::clear_yfusion() {
  yfusion_ = 0;
}
inline double FromAduMessage::yfusion() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.YFusion)
  return yfusion_;
}
inline void FromAduMessage::set_yfusion(double value) {
  
  yfusion_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.YFusion)
}

// double YawFusion = 5;
inline void FromAduMessage::clear_yawfusion() {
  yawfusion_ = 0;
}
inline double FromAduMessage::yawfusion() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.YawFusion)
  return yawfusion_;
}
inline void FromAduMessage::set_yawfusion(double value) {
  
  yawfusion_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.YawFusion)
}

// float VehicleSpeed = 6;
inline void FromAduMessage::clear_vehiclespeed() {
  vehiclespeed_ = 0;
}
inline float FromAduMessage::vehiclespeed() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.VehicleSpeed)
  return vehiclespeed_;
}
inline void FromAduMessage::set_vehiclespeed(float value) {
  
  vehiclespeed_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.VehicleSpeed)
}

// int32 ADVStatus = 7;
inline void FromAduMessage::clear_advstatus() {
  advstatus_ = 0;
}
inline ::google::protobuf::int32 FromAduMessage::advstatus() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.ADVStatus)
  return advstatus_;
}
inline void FromAduMessage::set_advstatus(::google::protobuf::int32 value) {
  
  advstatus_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.ADVStatus)
}

// int32 ADVSwitchReturn = 8;
inline void FromAduMessage::clear_advswitchreturn() {
  advswitchreturn_ = 0;
}
inline ::google::protobuf::int32 FromAduMessage::advswitchreturn() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.ADVSwitchReturn)
  return advswitchreturn_;
}
inline void FromAduMessage::set_advswitchreturn(::google::protobuf::int32 value) {
  
  advswitchreturn_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.ADVSwitchReturn)
}

// int32 SoftReturn = 9;
inline void FromAduMessage::clear_softreturn() {
  softreturn_ = 0;
}
inline ::google::protobuf::int32 FromAduMessage::softreturn() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.SoftReturn)
  return softreturn_;
}
inline void FromAduMessage::set_softreturn(::google::protobuf::int32 value) {
  
  softreturn_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.SoftReturn)
}

// int32 EmergencyReturn = 10;
inline void FromAduMessage::clear_emergencyreturn() {
  emergencyreturn_ = 0;
}
inline ::google::protobuf::int32 FromAduMessage::emergencyreturn() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.EmergencyReturn)
  return emergencyreturn_;
}
inline void FromAduMessage::set_emergencyreturn(::google::protobuf::int32 value) {
  
  emergencyreturn_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.EmergencyReturn)
}

// int32 LocFlag = 11;
inline void FromAduMessage::clear_locflag() {
  locflag_ = 0;
}
inline ::google::protobuf::int32 FromAduMessage::locflag() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.LocFlag)
  return locflag_;
}
inline void FromAduMessage::set_locflag(::google::protobuf::int32 value) {
  
  locflag_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.LocFlag)
}

// int32 GPSFlagPos = 12;
inline void FromAduMessage::clear_gpsflagpos() {
  gpsflagpos_ = 0;
}
inline ::google::protobuf::int32 FromAduMessage::gpsflagpos() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.GPSFlagPos)
  return gpsflagpos_;
}
inline void FromAduMessage::set_gpsflagpos(::google::protobuf::int32 value) {
  
  gpsflagpos_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.GPSFlagPos)
}

// int32 ActuatorError = 13;
inline void FromAduMessage::clear_actuatorerror() {
  actuatorerror_ = 0;
}
inline ::google::protobuf::int32 FromAduMessage::actuatorerror() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.ActuatorError)
  return actuatorerror_;
}
inline void FromAduMessage::set_actuatorerror(::google::protobuf::int32 value) {
  
  actuatorerror_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.ActuatorError)
}

// int32 SensorError = 14;
inline void FromAduMessage::clear_sensorerror() {
  sensorerror_ = 0;
}
inline ::google::protobuf::int32 FromAduMessage::sensorerror() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.SensorError)
  return sensorerror_;
}
inline void FromAduMessage::set_sensorerror(::google::protobuf::int32 value) {
  
  sensorerror_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.SensorError)
}

// float EvAim = 15;
inline void FromAduMessage::clear_evaim() {
  evaim_ = 0;
}
inline float FromAduMessage::evaim() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.EvAim)
  return evaim_;
}
inline void FromAduMessage::set_evaim(float value) {
  
  evaim_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.EvAim)
}

// int32 NaviNum = 16;
inline void FromAduMessage::clear_navinum() {
  navinum_ = 0;
}
inline ::google::protobuf::int32 FromAduMessage::navinum() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.NaviNum)
  return navinum_;
}
inline void FromAduMessage::set_navinum(::google::protobuf::int32 value) {
  
  navinum_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.NaviNum)
}

// float CIPO = 17;
inline void FromAduMessage::clear_cipo() {
  cipo_ = 0;
}
inline float FromAduMessage::cipo() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.FromAduMessage.CIPO)
  return cipo_;
}
inline void FromAduMessage::set_cipo(float value) {
  
  cipo_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.FromAduMessage.CIPO)
}

// -------------------------------------------------------------------

// ToAduMessage

// int32 PathNumOri = 1;
inline void ToAduMessage::clear_pathnumori() {
  pathnumori_ = 0;
}
inline ::google::protobuf::int32 ToAduMessage::pathnumori() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.ToAduMessage.PathNumOri)
  return pathnumori_;
}
inline void ToAduMessage::set_pathnumori(::google::protobuf::int32 value) {
  
  pathnumori_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.ToAduMessage.PathNumOri)
}

// .hirain.itd.hmi.demo.api.ToAduMessage.ActionType ADVSwitch = 2;
inline void ToAduMessage::clear_advswitch() {
  advswitch_ = 0;
}
inline ::hirain::itd::hmi::demo::api::ToAduMessage_ActionType ToAduMessage::advswitch() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.ToAduMessage.ADVSwitch)
  return static_cast< ::hirain::itd::hmi::demo::api::ToAduMessage_ActionType >(advswitch_);
}
inline void ToAduMessage::set_advswitch(::hirain::itd::hmi::demo::api::ToAduMessage_ActionType value) {
  
  advswitch_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.ToAduMessage.ADVSwitch)
}

// -------------------------------------------------------------------

// Message

// .hirain.itd.hmi.demo.api.Message.MessageType type = 1;
inline void Message::clear_type() {
  type_ = 0;
}
inline ::hirain::itd::hmi::demo::api::Message_MessageType Message::type() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.Message.type)
  return static_cast< ::hirain::itd::hmi::demo::api::Message_MessageType >(type_);
}
inline void Message::set_type(::hirain::itd::hmi::demo::api::Message_MessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:hirain.itd.hmi.demo.api.Message.type)
}

// .hirain.itd.hmi.demo.api.FromAduMessage from = 2;
inline bool Message::has_from() const {
  return aduMessage_case() == kFrom;
}
inline void Message::set_has_from() {
  _oneof_case_[0] = kFrom;
}
inline void Message::clear_from() {
  if (has_from()) {
    if (GetArenaNoVirtual() == NULL) {
      delete aduMessage_.from_;
    }
    clear_has_aduMessage();
  }
}
inline ::hirain::itd::hmi::demo::api::FromAduMessage* Message::release_from() {
  // @@protoc_insertion_point(field_release:hirain.itd.hmi.demo.api.Message.from)
  if (has_from()) {
    clear_has_aduMessage();
      ::hirain::itd::hmi::demo::api::FromAduMessage* temp = aduMessage_.from_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    aduMessage_.from_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::hirain::itd::hmi::demo::api::FromAduMessage& Message::from() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.Message.from)
  return has_from()
      ? *aduMessage_.from_
      : *reinterpret_cast< ::hirain::itd::hmi::demo::api::FromAduMessage*>(&::hirain::itd::hmi::demo::api::_FromAduMessage_default_instance_);
}
inline ::hirain::itd::hmi::demo::api::FromAduMessage* Message::unsafe_arena_release_from() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hirain.itd.hmi.demo.api.Message.from)
  if (has_from()) {
    clear_has_aduMessage();
    ::hirain::itd::hmi::demo::api::FromAduMessage* temp = aduMessage_.from_;
    aduMessage_.from_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::unsafe_arena_set_allocated_from(::hirain::itd::hmi::demo::api::FromAduMessage* from) {
  clear_aduMessage();
  if (from) {
    set_has_from();
    aduMessage_.from_ = from;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hirain.itd.hmi.demo.api.Message.from)
}
inline ::hirain::itd::hmi::demo::api::FromAduMessage* Message::mutable_from() {
  if (!has_from()) {
    clear_aduMessage();
    set_has_from();
    aduMessage_.from_ = 
      ::google::protobuf::Arena::CreateMessage< ::hirain::itd::hmi::demo::api::FromAduMessage >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:hirain.itd.hmi.demo.api.Message.from)
  return aduMessage_.from_;
}

// .hirain.itd.hmi.demo.api.ToAduMessage to = 3;
inline bool Message::has_to() const {
  return aduMessage_case() == kTo;
}
inline void Message::set_has_to() {
  _oneof_case_[0] = kTo;
}
inline void Message::clear_to() {
  if (has_to()) {
    if (GetArenaNoVirtual() == NULL) {
      delete aduMessage_.to_;
    }
    clear_has_aduMessage();
  }
}
inline ::hirain::itd::hmi::demo::api::ToAduMessage* Message::release_to() {
  // @@protoc_insertion_point(field_release:hirain.itd.hmi.demo.api.Message.to)
  if (has_to()) {
    clear_has_aduMessage();
      ::hirain::itd::hmi::demo::api::ToAduMessage* temp = aduMessage_.to_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp, NULL);
    }
    aduMessage_.to_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::hirain::itd::hmi::demo::api::ToAduMessage& Message::to() const {
  // @@protoc_insertion_point(field_get:hirain.itd.hmi.demo.api.Message.to)
  return has_to()
      ? *aduMessage_.to_
      : *reinterpret_cast< ::hirain::itd::hmi::demo::api::ToAduMessage*>(&::hirain::itd::hmi::demo::api::_ToAduMessage_default_instance_);
}
inline ::hirain::itd::hmi::demo::api::ToAduMessage* Message::unsafe_arena_release_to() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hirain.itd.hmi.demo.api.Message.to)
  if (has_to()) {
    clear_has_aduMessage();
    ::hirain::itd::hmi::demo::api::ToAduMessage* temp = aduMessage_.to_;
    aduMessage_.to_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::unsafe_arena_set_allocated_to(::hirain::itd::hmi::demo::api::ToAduMessage* to) {
  clear_aduMessage();
  if (to) {
    set_has_to();
    aduMessage_.to_ = to;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hirain.itd.hmi.demo.api.Message.to)
}
inline ::hirain::itd::hmi::demo::api::ToAduMessage* Message::mutable_to() {
  if (!has_to()) {
    clear_aduMessage();
    set_has_to();
    aduMessage_.to_ = 
      ::google::protobuf::Arena::CreateMessage< ::hirain::itd::hmi::demo::api::ToAduMessage >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:hirain.itd.hmi.demo.api.Message.to)
  return aduMessage_.to_;
}

inline bool Message::has_aduMessage() const {
  return aduMessage_case() != ADUMESSAGE_NOT_SET;
}
inline void Message::clear_has_aduMessage() {
  _oneof_case_[0] = ADUMESSAGE_NOT_SET;
}
inline Message::AduMessageCase Message::aduMessage_case() const {
  return Message::AduMessageCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace demo
}  // namespace hmi
}  // namespace itd
}  // namespace hirain

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::hirain::itd::hmi::demo::api::ToAduMessage_ActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hirain::itd::hmi::demo::api::ToAduMessage_ActionType>() {
  return ::hirain::itd::hmi::demo::api::ToAduMessage_ActionType_descriptor();
}
template <> struct is_proto_enum< ::hirain::itd::hmi::demo::api::Message_MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hirain::itd::hmi::demo::api::Message_MessageType>() {
  return ::hirain::itd::hmi::demo::api::Message_MessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_2eproto__INCLUDED
